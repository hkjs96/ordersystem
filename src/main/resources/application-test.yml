spring:
  application:
    name: ordersystem
  profiles:
    active: test

  # ??? Datasource & JPA ??????????????????????????????????????????????????????
  datasource:
    url: jdbc:h2:mem:ordersdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  # ??? Redis ?? ???????????????????????????????????????????????????????????
  redis:
    host: localhost
    port: 6379

  # ??? H2 ?? ??????????????????????????????????????????????????????????????
  h2:
    console:
      enabled: true
      path: /h2-console

  # ??? Static Resources & Multipart ?? ????????????????????????????????????
  mvc:
    static-path-pattern: /images/**
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  kafka:
    bootstrap-servers: localhost:9092

    # Producer 설정 (안정적인 기본값)
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: 1  # 리더 파티션 확인만 (성능과 안정성 균형)
      retries: 3
      properties:
        max.in.flight.requests.per.connection: 5

    # Consumer 설정
    consumer:
      group-id: ordersystem-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true  # 시작은 자동 커밋으로 (간단하게)
      properties:
        session.timeout.ms: 30000
        max.poll.records: 50

# ??? Server & Logging ???????????????????????????????????????????????????????
server:
  port: 8080

logging:
  level:
    root: INFO
    com.github.hkjs96.ordersystem.adapter.in.scheduler: DEBUG  # 스케줄러 로그 활성화

ordersystem:
  inventory:
    reservation-ttl-seconds: 3600
  kafka:
    topics:
      order-events: order-events
      inventory-events: inventory-events
  scheduler:
    delivery:
      enabled: true
      # 🔧 테스트용으로 시간 대폭 단축
      ship-delay-minutes: 0.5       # 기존 30분 → 30초
      delivery-delay-hours: 0.02    # 기존 2시간 → 1분 12초
    # 🔧 배송 관련 설정
  delivery:
    default-courier: "CJ대한통운"

# ??? (Optional) Redis / Kafka ?? ? ?? ??? ?? ? ?? ?????????????????
# spring:
#   kafka:
#     bootstrap-servers: localhost:9092
#     consumer:
#       group-id: ordersystem
#     producer:
#       key-serializer: org.apache.kafka.common.serialization.StringSerializer
#       value-serializer: org.apache.kafka.common.serialization.StringSerializer
