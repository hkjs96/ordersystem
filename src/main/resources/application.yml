spring:
  application:
    name: ordersystem

  # ??? Datasource & JPA ??????????????????????????????????????????????????????
  datasource:
    url: jdbc:h2:mem:ordersdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  # ??? Redis ?? ???????????????????????????????????????????????????????????
  redis:
    host: localhost
    port: 6379

  # ??? H2 ?? ??????????????????????????????????????????????????????????????
  h2:
    console:
      enabled: true
      path: /h2-console

  # ??? Static Resources & Multipart ?? ????????????????????????????????????
  mvc:
    static-path-pattern: /images/**
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: ordersystem-group
      auto-offset-reset: earliest

# ??? Server & Logging ???????????????????????????????????????????????????????
server:
  port: 8080

logging:
  level:
    root: INFO
    com.github.hkjs96.ordersystem: DEBUG

ordersystem:
  inventory:
    reservation-ttl-seconds: 3600
  kafka:
    topic: orders-events

# ??? (Optional) Redis / Kafka ?? ? ?? ??? ?? ? ?? ?????????????????
# spring:
#   kafka:
#     bootstrap-servers: localhost:9092
#     consumer:
#       group-id: ordersystem
#     producer:
#       key-serializer: org.apache.kafka.common.serialization.StringSerializer
#       value-serializer: org.apache.kafka.common.serialization.StringSerializer
